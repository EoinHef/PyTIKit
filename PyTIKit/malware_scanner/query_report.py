from datetime import datetime

def write_report(hashes):
    try:
        # Open report file to get ready to start t write to it
        with open('VT_MaliciousFile_Report.txt', 'w') as report:
            # Loop through dictionary for filepaths and hashes to print
            for filepath, hash_info in hashes.items():
                # Check to see if a hash has a virus total report, if it does not, dont write it to report
                if 'vt_report' in hash_info:
                    # Add date to timetsamp report writing time
                    report.write(f"Written to Report :{str(datetime.now())}\n")
                    # Add the file path of the file
                    report.write(f"Path to file : {filepath}\n")
                    # Access nested vt_report dictionary to print report stats
                    report.write(f"MD5 Hash : {hash_info['vt_report']['md5']}\n")
                    report.write(f"File Type : {hash_info['vt_report']['file_type']}\n")
                    report.write(f"Votes : {hash_info['vt_report']['total_votes']}\n")
                    report.write(f"Last scan stats : {hash_info['vt_report']['last_analysis_stats']}\n")
                    report.write(f"URL of Search : {hash_info['vt_report']['search_url']}\n")
                    report.write("*"*165+"\n")
                else:
                    # Let user know why they cannot write hash to report
                    print(f"No VT report presnt for {hash_info}, only hashes with VT reports can be written to file")
    except Exception as e:
        print(f"An unexpected error occurred: {str(e)}")
        return None

