import os
import hashlib

def scan_filesystem(root_dir):
    # Initialise an empty Dictionary for filepaths and file hashes
    hashes = {}
    try:
        # Use a loop to process all directories and files contained in the root directory passed as argument
        for root, dirs, files in os.walk(root_dir):
            # Use a loop to process and get file hashes of all files in the root directory and sub-directories
            for file in files:
                # Get the full file path of each file
                filepath = os.path.join(root, file)
                # Open each file with r for read and b for bytes
                with open(filepath, 'rb') as file:
                    # Read in bytes and store in file_bytes variable
                    file_bytes = file.read()
                    # Pass the bytes to hashlib.md5 to get a MD5 hash of each file
                    hash_object = hashlib.md5(file_bytes)
                    # Get a hex string of the hash
                    hex_dig = hash_object.hexdigest()
                    # Store the filepath as key and hash as value in dictionary
                    hashes[filepath] = hex_dig
    except Exception as e:
        print(f"{filepath} could not be hashed: {str(e)}")
         
        
    return hashes

# Function to print the hashes
def print_hashes(hashes):
    try:
        # Counter variable
        i = 0
        # Loop to process all entries in hashes
        for key, value in hashes.items():
            # Print the key value pairs
            print(key, ":", value)
            # Increase counter for each entry printed
            i += 1
        # Print the value of the counter
        print("Total File Hashes : "+str(i))
    except Exception as e:
        print(f"An unexpected error occurred: {str(e)}")
        return None